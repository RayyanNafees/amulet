---
import Base from '@/layouts/Base.astro'
import SigninForm from '@/components/SigninForm'
import pb from '@/lib/pb'
import { z, ZodError } from 'astro/zod'
import { ClientResponseError } from 'pocketbase'

if (pb.authStore.isValid) return Astro.redirect('/')

let error = undefined

const facultyParam = Astro.url.searchParams.get('faculty')
console.log('Faculty', facultyParam)
const isStudent = !facultyParam

if (Astro.request.method === 'POST') {
  const data = await Astro.request.formData()
  const faculty = data.get('faculty')
  const email = data.get('email')
  const pass = data.get('password')
  const userSchema = z.object({
    faculty: z.string().length(10),
    pass: z.string().min(8),
    email: z.string().email(),
  })

  try {
    const user = userSchema.safeParse({ faculty, pass, email })
    if (!user.success) throw new z.ZodError(user.error.issues)
    else {
      const auth = await pb
        .collection(isStudent ? 'student' : 'faculty')
        .authWithPassword(user.data.email, user.data.pass, {
          expand: 'section,class,subjects'
        })
      console.log('Auth', auth)
      if (auth.token)
        if (faculty === auth.record.faculty) return Astro.redirect('/')
        else {
          pb.authStore.clear()
          throw new Error('Incorrect Faculty Number')
        }
    }
  } catch (e) {
    if (e instanceof ClientResponseError) error = e.response.message
    else if (e instanceof z.ZodError)
      error = e.issues
        .map((issue) => issue.path[0] + ': ' + issue.message)
        .join(', ')
    else if (e instanceof Error) error = e?.message || e
    else console.log(e)
  }

  // alert('logged in')
}
---

<Base>
  <hgroup>
    <h1>Sign in to Amulet</h1>
    <h2>New to Amulet ? <a href='/register'>Create an account</a></h2>
  </hgroup>
  <article class='pt-0'>
    <div role='group' style={{ width: '105%', transform: 'translateX(-2.5%)' }}>
      <a
        role='button'
        class={isStudent ? 'primary' : 'secondary'}
        href={Astro.url.origin + '?student=true'}
      >
        Student
      </a>
      <a
        role='button'
        class={!isStudent ? 'primary' : 'secondary'}
        href={`${Astro.url.pathname}?faculty=true`}
      >
        Faculty
      </a>
    </div>
    <form
      action={'/register' + isStudent ? '?student=true' : '?faculty=true'}
      method='POST'
    >
      <small class='text-red'>{error}</small>
      <input name='faculty' placeholder='Faculty No' required />
      <input name='email' placeholder='email' type='email' required />
      <input type='password' name='password' placeholder='Password' required />
      <small>Minimum 8 characters</small>
      <input type='submit' value='Login' />
    </form>
  </article>
</Base>
